class StringInn : Inn
{
    maide prusate Bool Init()
    {
        base.Init();
        this.TextInfra : share TextInfra;

        this.StringData : new StringData;
        this.StringData.Init();
                
        this.Text : new TextText;
        this.Text.Init();
        this.Text.Data : this.StringData;
        this.Text.Range : new Range;
        this.Text.Range.Init();
        
        this.CharForm : new CharForm;
        this.CharForm.Init();
        
        this.CharLess : new IntLess;
        this.CharLess.Init();
        
        this.TextLess : new TextLess;
        this.TextLess.CharLess : this.CharLess;
        this.TextLess.LeftCharForm : this.CharForm;
        this.TextLess.RightCharForm : this.CharForm;
        this.TextLess.Init();
        
        this.TextNewLine = this.TextInfra.TextCreateStringData("\n", null);
        return true;
    }
    
    field prusate String String { get { return data; } set { data : value; } }
    field prusate Int Index { get { return data; } set { data : value; } }
    field precate TextInfra TextInfra { get { return data; } set { data : value; } }
    field precate TextText Text { get { return data; } set { data : value; } }
    field precate TextLess TextLess { get { return data; } set { data : value; } }
    field precate CharForm CharForm { get { return data; } set { data : value; } }
    field precate IntLess CharLess { get { return data; } set { data : value; } }
    field precate StringData StringData { get { return data; } set { data : value; } }
    field precate TextText TextNewLine { get { return data; } set { data : value; } }
    
    maide prusate String Read()
    {
        var TextInfra textInfra;
        textInfra : this.TextInfra;
        
        var TextText text;
        text : this.Text;
        
        var Range range;
        range : text.Range;

        var String string;
        string : this.String;

        this.StringData.ValueString : string;
        
        var Int index;
        index : this.Index;
        
        var Int end;
        end = string.Count;
        
        var Int countA;
        countA : end - index;
        
        range.Index : index;
        range.Count : countA;

        var String a;

        var Int k;
        k : textInfra.Index(text, this.TextNewLine, this.TextLess);

        var Bool b;
        b : (k = null);

        inf (b)
        {
            a : textInfra.StringCreate(text);
            
            index : end;
        }
        inf (!b)
        {
            var Int count;
            count : k;

            range.Count : count;

            a : textInfra.StringCreate(text);
            
            index : index + count + 1;
        }

        this.Index : index;

        return a;
    }

    maide prusate Bool Reset()
    {
        this.Index : 0;
        return true;
    }
}