class InternInfra : Any
{
    maide prusate Bool Init()
    {
        base.Init();
        this.InternIntern : share Intern;
        this.Extern : share Extern;
        return true;
    }
    
    field precate Intern InternIntern { get { return data; } set { data : value; } }
    field precate Extern Extern { get { return data; } set { data : value; } }

    maide prusate Bool ValidIndex(var Int count, var Int index)
    {
        return this.ValidRange(count, index, 1);
    }

    maide prusate Bool ValidRange(var Int totalCount, var Int index, var Int count)
    {
        inf (totalCount = null)
        {
            return false;
        }
        inf (index = null)
        {
            return false;
        }
        inf (count = null)
        {
            return false;
        }
        inf (totalCount < index + count)
        {
            return false;
        }
        return true;
    }

    maide prusate Int DataByteListGet(var Any data, var Int index, var Int count)
    {
        var Intern internIntern;
        internIntern : this.InternIntern;

        var Int oo;
        oo : 0;

        var Int i;
        i : 0;
        while (i < count)
        {
            var Int ob;
            ob : internIntern.DataGet(data, index + i);

            var Int shiftCount;
            shiftCount : i * 8;

            var Int o;
            o : bit<(ob, shiftCount);

            oo : bit|(oo, o);

            i : i + 1;
        }
        
        var Int a;
        a : oo;
        return a;
    }

    public virtual bool DataByteListSet(byte[] data, long index, long count, ulong value)
    {
        long d;
        d = this.IntCapValue - 1;
        ulong da;
        da = (ulong)d;
        ulong oo;
        oo = value;
        oo = oo & da;

        long i;
        i = 0;
        while (i < count)
        {
            int shiftCount;
            shiftCount = (int)(i * 8);

            ulong o;
            o = oo >> shiftCount;

            byte ob;
            ob = (byte)o;

            data[index + i] = ob;

            i = i + 1;
        }
        return true;
    }

    maide prusate Int TextCodeCount(var Int innKind, var Int outKind, var Any data, var Int dataIndex, var Int dataCount)
    {
        var Int dataValue;
        dataValue : this.InternIntern.Memory(data);
        dataValue : dataValue + dataIndex;
        
        var Int k;
        k : this.Extern.TextCode_ExecuteCount(0, innKind, outKind, dataValue, dataCount);
        return k;
    }

    maide prusate Bool TextCodeResult(var Any result, var Int resultIndex, var Int innKind, var Int outKind, var Any data, var Int dataIndex, var Int dataCount)
    {
        var Int dataValue;
        dataValue : this.InternIntern.Memory(data);
        dataValue : dataValue + dataIndex;

        var Int resultValue;
        resultValue : this.InternIntern.Memory(result);
        resultValue : resultValue + resultIndex;
        
        this.Extern.TextCode_ExecuteResult(0, resultValue, innKind, outKind, dataValue, dataCount);
        return true;
    }   
}