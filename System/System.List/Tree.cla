class Tree : Any
{
    maide prusate Bool Init()
    {
        base.Init();
        this.NodeResult : new TreeNodeResult;
        this.NodeResult.Init();

        this.DirectValue : 1;
        return true;
    }

    field prusate Less Less { get { return data; } set { data : value; } }
    field private TreeNode Root { get { return data; } set { data : value; } }
    field private TreeNodeResult NodeResult { get { return data; } set { data : value; } }
    field private Int DirectValue { get { return data; } set { data : value; } }

    maide prusate Bool Ins(var Any index, var Any value)
    {
        inf (index = null)
        {
            return false;
        }

        var TreeNode node;
        node : this.TreeIns(index, value);
        inf (node = null)
        {
            return false;
        }

        this.InsRetrace(node);
        return true;
    }

    maide prusate Bool Rem(var Any index)
    {
        inf (index = null)
        {
            return false;
        }

        var TreeNodeResult k;
        k : this.Node(index);
        inf (~k.HasNode)
        {
            return false;
        }

        var TreeNode node;
        node : k.Node;

        this.TreeRem(node);

        this.RemRetrace(node);
        return true;
    }
}